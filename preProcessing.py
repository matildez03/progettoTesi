import pandas as pdimport numpy as npimport matplotlib.pyplot as pltimport seaborn as snsfrom tabulate import tabulatefrom sklearn.preprocessing import LabelEncoder#formattazione della stampa di pandaspd.set_option('display.max_columns', None)  # Mostra tutte le colonnepd.set_option('display.expand_frame_repr', False)  # Evita che le colonne vadano a capo# Carico il datasetfile_path = "spotify_dataset_2022.csv"  df = pd.read_csv(file_path)# Mostra le prime righe del datasetprint("Prime righe del dataset:")print(df.head())# Controllo il tipo di dati e i valori mancantiprint("\nInformazioni sul dataset:")print(df.info())# Controllo la presenza di valori mancantiprint("\nValori mancanti per colonna:")print(df.isnull().sum())# Statistiche descrittive sulle feature numericheprint("\nStatistiche descrittive:")print(df.describe())#cleaningdf.dropna()df.columns = df.columns.str.strip()  # Rimuove spazi dai nomi delle colonnedf.drop(columns=["Unnamed: 0"], inplace=True)print(df.head())#raccolgo solo le variabili numeriche# Codifica la colonna 'explicit' da booleano a interodf['explicit'] = df['explicit'].astype(int)df_numerics = df.drop(columns=["track_id", "artists", "album_name", "track_name"], inplace=True)num_generi = df['track_genre'].nunique()print(f"Numero di generi unici: {num_generi}")generi_unici = df['track_genre'].unique()print("Generi unici:", generi_unici)# noot che ci sono 144 generi diversi, per cui li mappogenre_mapping = {    'rock': ['alt-rock', 'alternative', 'black-metal', 'garage', 'grindcore', 'grunge',              'hard-rock', 'hardcore', 'heavy-metal', 'metal', 'metalcore', 'punk-rock', 'punk',              'psych-rock', 'rock-n-roll', 'rock', 'rockabilly'],        'pop': ['acoustic', 'indie-pop', 'indie', 'power-pop', 'pop-film', 'pop', 'singer-songwriter',             'songwriter', 'swedish', 'synth-pop'],        'hip-hop_rnb': ['hip-hop', 'r-n-b', 'reggaeton'],        'electronic': ['edm', 'electro', 'electronic', 'idm', 'minimal-techno', 'progressive-house',                    'techno', 'trance', 'trip-hop', 'dubstep', 'deep-house', 'house',                    'detroit-techno', 'chicago-house'],        'latin': ['brazil', 'latin', 'latino', 'mpb', 'pagode', 'samba', 'sertanejo', 'forro',               'salsa', 'tango'],        'japanese_korean': ['j-pop', 'j-rock', 'j-dance', 'j-idol', 'k-pop'],        'classical': ['classical', 'opera', 'piano'],        'jazz_blues': ['blues', 'bluegrass', 'jazz', 'soul'],        'folk_country': ['folk', 'country', 'honky-tonk'],        'world_music': ['afrobeat', 'turkish', 'indian', 'iranian', 'malay', 'mandopop', 'cantopop',                     'disney', 'show-tunes', 'world-music'],        'experimental': ['ambient', 'new-age', 'study', 'sleep'],        'other': ['anime', 'british', 'comedy', 'disco', 'funk', 'gospel', 'goth', 'groove',               'happy', 'party', 'sad', 'romance', 'children', 'kids']}# Mappatura del genere in macro-categoriedef map_genre(genre):    for macro, subgenres in genre_mapping.items():        if genre in subgenres:            return macro    return 'other'  # Se non appartiene a nessuna categoria, lo mettiamo in 'other'# Applica la funzione al dataframedf['genre_mapped'] = df['track_genre'].apply(map_genre)# Controllo del risultatoprint(df[['track_genre', 'genre_mapped']].head(20))num_generi = df['genre_mapped'].nunique()print(f"Numero di generi unici: {num_generi}")generi_unici = df['genre_mapped'].unique()print("Generi unici dopo il mapping:", generi_unici)# Visualizza la distribuzione del genere dopo il mapping dei braniplt.figure(figsize=(8, 5))sns.histplot(df['genre_mapped'], bins=20, kde=True)plt.xlabel("Genere")plt.ylabel("Conteggio")plt.title("Distribuzione del genere dei brani dopo il mapping")plt.show()# Conta il numero di brani per ogni genere mappatoconteggio_generi = df['genre_mapped'].value_counts()# Stampa il conteggioprint(conteggio_generi)# Correlazione tra genere (mappato) e popolaritòplt.figure(figsize=(12,6))sns.boxplot(x='genre_mapped', y='popularity', data=df)plt.xticks(rotation=90)plt.xlabel("Genere Mappato")plt.ylabel("Popolarità")plt.title("Distribuzione della Popolarità per Genere")plt.show()# Codifico i generi mappati in mood da trattarli come vaariabili numerichelabel_encoder = LabelEncoder()df['genre_encoded'] = label_encoder.fit_transform(df['genre_mapped'])print(df[['genre_mapped', 'genre_encoded']].head())# Valuto la correlazione tra le features e il targetdf_numerics = df.select_dtypes(include=['number'])# Calcola la matrice di correlazionecorrelation_matrix = df_numerics.corr()# Visualizza la matrice di correlazione con una heatmapplt.figure(figsize=(12, 8))sns.heatmap(correlation_matrix, annot=True, cmap="coolwarm", fmt=".2f", linewidths=0.5)plt.title("Matrice di Correlazione tra le Feature Numeriche")plt.show()# Visualizza la distribuzione della popolarità dei braniplt.figure(figsize=(8, 5))sns.histplot(df['popularity'], bins=20, kde=True)plt.xlabel("Popolarità")plt.ylabel("Conteggio")plt.title("Distribuzione della popolarità dei brani")plt.show()df.hist()plt.show()